// Function to generate a random signal strength between -40 and -90
function randomSignalStrength() {
    return Math.floor(Math.random() * (90 - 40 + 1)) - 90;
}

// Function to create a simulated training sample for a given location
function generateSampleForLocation(location) {
    let sample = [];
    for (let i = 0; i < 10; i++) { // Assuming there are 10 beacons
        sample.push(randomSignalStrength());
    }
    return sample;
}

// Generating the training set
const trainingSet = [];
const predictions = [];
const locations = ['1.1', '1.2', '2.1', '2.2', '3.1', '3.2'];

// Assuming you want 50 samples for each location
locations.forEach(location => {
    for (let i = 0; i < 50; i++) {
        trainingSet.push(generateSampleForLocation(location));
        predictions.push(location);
    }
});

const trainingData1_1 = [[-82, -82, -77, -75, -81, -88, -100, -100, -100, -100],
[-80, -84, -76, -75, -83, -87, -100, -100, -100, -100],
[-82, -79, -75, -78, -83, -86, -100, -100, -100, -100],
[-82, -74, -84, -88, -92, -100, -100, -100, -100, -100],
[-82, -76, -85, -80, -90, -100, -100, -100, -100, -100],
[-83, -75, -84, -87, -88, -100, -100, -100, -100, -100],
[-83, -76, -86, -84, -87, -100, -100, -100, -100, -100],
[-84, -78, -86, -87, -89, -100, -100, -100, -100, -100],
[-80, -77, -88, -84, -90, -100, -100, -100, -100, -100],
[-79, -81, -86, -86, -90, -100, -100, -100, -100, -100],
[-81, -73, -86, -87, -90, -100, -100, -100, -100, -100],
[-82, -77, -87, -85, -88, -100, -100, -100, -100, -100],
[-85, -79, -84, -82, -90, -100, -100, -100, -100, -100],
[-80, -79, -82, -81, -89, -100, -100, -100, -100, -100],
[-85, -85, -83, -82, -89, -100, -100, -100, -100, -100],
[-84, -85, -84, -79, -88, -100, -100, -100, -100, -100],
[-84, -78, -89, -83, -88, -100, -100, -100, -100, -100],
[-81, -79, -83, -83, -86, -100, -100, -100, -100, -100],
[-85, -77, -82, -91, -88, -100, -100, -100, -100, -100],
[-82, -76, -85, -83, -92, -100, -100, -100, -100, -100],
[-82, -80, -85, -82, -86, -100, -100, -100, -100, -100],
[-87, -75, -87, -81, -91, -100, -100, -100, -100, -100],
[-81, -82, -83, -87, -90, -100, -100, -100, -100, -100],
[-83, -77, -82, -84, -89, -100, -100, -100, -100, -100],
[-81, -82, -84, -82, -89, -100, -100, -100, -100, -100],
[-81, -78, -82, -84, -89, -100, -100, -100, -100, -100],
[-83, -81, -83, -84, -87, -100, -100, -100, -100, -100],
[-83, -78, -84, -85, -92, -100, -100, -100, -100, -100],
[-81, -79, -84, -83, -88, -100, -100, -100, -100, -100],
[-83, -78, -85, -83, -87, -100, -100, -100, -100, -100],
[-84, -79, -87, -84, -88, -100, -100, -100, -100, -100],
[-86, -82, -85, -80, -86, -100, -100, -100, -100, -100],
[-84, -81, -86, -81, -90, -100, -100, -100, -100, -100],
[-84, -79, -83, -81, -92, -100, -100, -100, -100, -100],
[-83, -81, -88, -81, -88, -100, -100, -100, -100, -100],
[-82, -78, -89, -82, -88, -100, -100, -100, -100, -100],
[-81, -83, -84, -82, -87, -100, -100, -100, -100, -100],
[-84, -82, -83, -79, -86, -100, -100, -100, -100, -100],
[-86, -76, -84, -79, -88, -100, -100, -100, -100, -100],
[-81, -82, -83, -81, -100, -100, -100, -100, -100, -100],
[-82, -84, -86, -88, -100, -100, -100, -100, -100, -100],
[-83, -78, -100, -100, -100, -100, -100, -100, 100, 100],
[-84, -81, -100, -100, -100, -100, -100, -100, -100, -100],
[-85, -82, -100, -100, -100, -100, -100, -100, -100, -100],
[-83, -80, -100, -100, -100, -100, -100, -100, -100, -100],
[-82, -100, -100, -100, -100, -100, -100, -100, -100, -100],
[-83, -100, -100, -100, -100, -100, -100, -100, -100, -100],
[-83, -100, -100, -100, -100, -100, -100, -100, -100, -100]];

const trainingData1_2 = [[-92.5, -89, -75, -88, -88.5, -94, -100, -100, -100, -100],
[-86.33333333, -88, -78, -86.5, -91, -94, -100, -100, -100, -100],
[-90.5, -87, -79.5, -84.33333333, -88, -95, -100, -100, -100, -100],
[-88, -89, -79.5, -88, -88, -94, -100, -100, -100, -100],
[-90, -87.5, -81.66666667, -87.33333333, -90, -94, -100, -100, -100, -100],
[-88.5, -87, -78.66666667, -84, -88.66666667, -95.5, -100, -100, -100, -100],
[-88, -89, -79.75, -84, -92, -95, -100, -100, -100, -100],
[-87.33333333, -87, -82.5, -82.5, -86, -88, -95, -100, -100, -100],
[-88.66666667, -89, -83, -81.5, -86, -94, -100, -100, -100, -100],
[-89.33333333, -89, -81.33333333, -83.66666667, -90.33333333, -100, -100, -100, -100, -100],
[-90, -89, -81.66666667, -81, -90, -100, -100, -100, -100, -100],
[-93, -86.66666667, -82.33333333, -81.33333333, -90, -100, -100, -100, -100, -100],
[-93, -91, -81.33333333, -83, -84, -100, -100, -100, -100, -100],
[-88, -88, -83.33333333, -82.5, -100, -100, -100, -100, -100, -100],
[-88, -92, -80, -83, -100, -100, -100, -100, -100, -100],
[-100, -90, -79.5, -86.5, -100, -100, -100, -100, -100, -100],
[-100, -100, -79, -100, -86, -100, -100, -100, -100, -100]];

const trainingData2_1 = [[-91, -89, -93, -82, -85, -67, -77, -86, -83, -91],
[-88, -91, -92, -85, -77, -66, -74, -88, -83, -86],
[-91, -87, -91, -85, -76, -66, -73, -89, -86, -88],
[-88, -95, -91, -87, -77, -67, -74, -88, -84, -90],
[-90, -89, -91, -85, -74, -67, -75, -88, -79, -88],
[-93, -87, -88, -82, -75, -69, -76, -87, -82, -90],
[-93, -86, -86, -82, -75, -69, -73, -90, -81, -91],
[-92, -91, -89, -82, -75, -69, -75, -90, -84, -89],
[-92, -87, -90, -83, -77, -69, -76, -87, -82, -86],
[-90, -92, -91, -83, -76, -67, -77, -92, -83, -88],
[-90, -100, -100, -79, -76, -72, -75, -90, -87, -88],
[-100, -100, -100, -81, -75, -69, -75, -90, -84, -89],
[-100, -100, -100, -85, -73, -69, -78, -93, -84, -86],
[-100, -100, -100, -84, -72, -69, -76, -92, -83, -85],
[-100, -100, -100, -85, -75, -70, -77, -88, -82, -88],
[-100, -100, -100, -84, -77, -73, -78, -90, -82, -90],
[-100, -100, -100, -83, -75, -70, -76, -88, -86, -92],
[-100, -100, -100, -79, -76, -71, -76, -100, -85, -89],
[-100, -100, -100, -79, -78, -72, -75, -100, -82, -88],
[-100, -100, -100, -81, -75, -71, -74, -100, -80, -88],
[-100, -100, -100, -86, -74, -70, -76, -100, -84, -92],
[-100, -100, -100, -81, -77, -69, -75, -100, -85, -85],
[-100, -100, -100, -84, -76, -72, -79, -100, -81, -100],
[-100, -100, -100, -82, -77, -69, -75, -100, -80, -100],
[-100, -100, -100, -81, -79, -68, -75, -100, -100, -100],
[-100, -100, -100, -84, -76, -69, -74, -100, -100, -100],
[-100, -100, -100, -81, -74, -69, -77, -100, -100, -100],
[-100, -100, -100, -81, -75, -67, -77, -100, -100, -100],
[-100, -100, -100, -81, -74, -69, -76, -100, -100, -100],
[-100, -100, -100, -81, -74, -70, -78, -100, -100, -100],
[-100, -100, -100, -79, -73, -69, -76, -100, -100, -100],
[-100, -100, -100, -79, -74, -71, -75, -100, -100, -100],
[-100, -100, -100, -80, -80, -70, -77, -100, -100, -100],
[-100, -100, -100, -82, -76, -71, -77, -100, -100, -100],
[-100, -100, -100, -100, -77, -100, -78, -100, -100, -100],
[-100, -100, -100, -100, -80, -100, -76, -100, -100, -100],
[-100, -100, -100, -100, -75, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -76, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -75, -100, -100, -100, -100, -100]];

const trainingData2_2 = [[-99, -82, -90, -80, -87, -70, -74, -82, -87, -87],
[-94, -86, -89, -80, -83, -70, -78, -83, -82, -88],
[-90, -81, -89, -84, -81, -68, -78, -81, -79, -88],
[-92, -84, -94, -79, -86, -68, -77, -80, -81, -86],
[-91, -86, -92, -81, -84, -65, -74, -79, -84, -86],
[-91, -82, -93, -82, -88, -67, -79, -77, -85, -82],
[-90, -79, -89, -81, -86, -73, -76, -82, -82, -82],
[-91, -83, -88, -83, -86, -69, -76, -79, -78, -86],
[-92, -84, -100, -85, -82, -69, -75, -81, -82, -90],
[-96, -81, -100, -79, -86, -67, -77, -80, -80, -89],
[-100, -83, -100, -80, -87, -71, -76, -79, -83, -87],
[-100, -85, -100, -84, -85, -76, -78, -78, -81, -87],
[-100, -83, -100, -83, -90, -64, -74, -78, -83, -85],
[-100, -85, -100, -85, -83, -73, -75, -80, -77, -85],
[-100, -85, -100, -83, -88, -70, -75, -80, -80, -83],
[-100, -84, -100, -83, -87, -72, -74, -79, -83, -90],
[-100, -85, -100, -82, -85, -73, -77, -82, -89, -84],
[-100, -84, -100, -85, -85, -68, -72, -76, -89, -88],
[-100, -82, -100, -81, -83, -71, -77, -83, -86, -85],
[-100, -85, -100, -88, -88, -70, -75, -79, -85, -88],
[-100, -85, -100, -82, -80, -70, -74, -78, -82, -85],
[-100, -91, -100, -81, -86, -64, -76, -79, -82, -86],
[-100, -85, -100, -79, -82, -73, -76, -83, -83, -86],
[-100, -83, -100, -84, -81, -70, -75, -84, -77, -88],
[-100, -84, -100, -82, -84, -71, -77, -78, -75, -93],
[-100, -84, -100, -80, -82, -70, -75, -82, -79, -88],
[-100, -85, -100, -88, -83, -77, -74, -83, -77, -88],
[-100, -82, -100, -82, -84, -69, -74, -82, -87, -89],
[-100, -83, -100, -82, -82, -75, -76, -79, -83, -93],
[-100, -82, -100, -81, -82, -70, -73, -80, -83, -86],
[-100, -82, -100, -82, -83, -66, -77, -79, -83, -87],
[-100, -81, -100, -88, -83, -70, -75, -78, -83, -84],
[-100, -100, -100, -83, -79, -73, -75, -81, -87, -90],
[-100, -100, -100, -82, -84, -66, -83, -78, -81, -88],
[-100, -100, -100, -83, -85, -68, -81, -83, -100, -86],
[-100, -100, -100, -81, -85, -70, -80, -79, -100, -82],
[-100, -100, -100, -83, -83, -73, -80, -81, -100, -85],
[-100, -100, -100, -82, -85, -68, -79, -79, -100, -100],
[-100, -100, -100, -83, -84, -68, -75, -79, -100, -100],
[-100, -100, -100, -79, -86, -72, -77, -83, -100, -100],
[-100, -100, -100, -83, -100, -73, -78, -83, -100, -100],
[-100, -100, -100, -81, -100, -71, -80, -80, -100, -100],
[-100, -100, -100, -82, -100, -68, -80, -82, -100, -100],
[-100, -100, -100, -88, -100, -67, -75, -100, -100, -100],
[-100, -100, -100, -84, -100, -69, -75, -100, -100, -100],
[-100, -100, -100, -79, -100, -70, -76, -100, -100, -100],
[-100, -100, -100, -85, -100, -68, -77, -100, -100, -100],
[-100, -100, -100, -100, -100, -72, -79, -100, -100, -100],
[-100, -100, -100, -100, -100, -70, -74, -100, -100, -100],
[-100, -100, -100, -100, -100, -70, -78, -100, -100, -100]];

const trainingData3_1 = [[-88, -85, -88, -88, -75, -81, -78, -86, -100, -100],
[-82, -92, -92, -78, -74, -82, -78, -86, -100, -100],
[-87, -93, -88, -87, -73, -89, -81, -87, -100, -100],
[-86, -88, -89, -80, -79, -84, -75, -85, -100, -100],
[-82, -88, -89, -81, -71, -90, -78, -88, -100, -100],
[-92, -90, -93, -84, -73, -89, -79, -86, -100, -100],
[-93, -92, -89, -80, -74, -85, -76, -85, -100, -100],
[-84, -93, -88, -81, -74, -84, -76, -85, -100, -100],
[-84, -93, -90, -86, -74, -79, -79, -82, -100, -100],
[-82, -92, -100, -85, -79, -78, -83, -84, -100, -100],
[-83, -89, -100, -79, -76, -87, -78, -85, -100, -100],
[-85, -86, -100, -77, -80, -79, -80, -87, -100, -100],
[-84, -94, -100, -77, -73, -80, -80, -82, -100, -100],
[-85, -89, -100, -82, -74, -80, -83, -90, -100, -100],
[-83, -88, -100, -79, -83, -78, -81, -86, -100, -100],
[-82, -90, -100, -78, -72, -74, -83, -88, -100, -100],
[-80, -89, -100, -79, -75, -77, -79, -88, -100, -100],
[-83, -91, -100, -80, -70, -73, -78, -88, -100, -100],
[-81, -100, -100, -76, -72, -78, -75, -86, -100, -100],
[-84, -100, -100, -82, -71, -78, -78, -88, -100, -100],
[-85, -100, -100, -78, -83, -76, -80, -91, -100, -100],
[-86, -100, -100, -77, -83, -77, -81, -86, -100, -100],
[-82, -100, -100, -83, -79, -81, -81, -87, -100, -100],
[-82, -100, -100, -84, -74, -81, -83, -87, -100, -100],
[-85, -100, -100, -86, -74, -77, -80, -88, -100, -100],
[-84, -100, -100, -79, -73, -75, -74, -88, -100, -100],
[-86, -100, -100, -80, -73, -81, -81, -86, -100, -100],
[-89, -100, -100, -100, -70, -79, -80, -84, -100, -100],
[-100, -100, -100, -100, -74, -83, -80, -85, -100, -100],
[-100, -100, -100, -100, -72, -78, -78, -90, -100, -100],
[-100, -100, -100, -100, -73, -79, -74, -86, -100, -100],
[-100, -100, -100, -100, -72, -85, -77, -85, -100, -100],
[-100, -100, -100, -100, -75, -85, -74, -94, -100, -100],
[-100, -100, -100, -100, -74, -84, -72, -100, -100, -100],
[-100, -100, -100, -100, -74, -87, -73, -100, -100, -100],
[-100, -100, -100, -100, -75, -84, -80, -100, -100, -100],
[-100, -100, -100, -100, -76, -100, -81, -100, -100, -100],
[-100, -100, -100, -100, -72, -100, -79, -100, -100, -100],
[-100, -100, -100, -100, -73, -100, -79, -100, -100, -100],
[-100, -100, -100, -100, -79, -100, -78, -100, -100, -100],
[-100, -100, -100, -100, -77, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -74, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -74, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -77, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -79, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -75, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -82, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -79, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -86, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -90, -100, -100, -100, -100, -100]];

const trainingData3_2 = [[-82, -89, -92, -83, -69, -85, -81, -87, -100, -100],
[-80, -87, -93, -82, -68, -86, -79, -82, -100, -100],
[-78, -88, -89, -86, -69, -87, -80, -81, -100, -100],
[-77, -87, -91, -83, -69, -87, -79, -82, -100, -100],
[-76, -88, -89, -84, -69, -86, -77, -81, -100, -100],
[-76, -88, -91, -81, -70, -87, -77, -80, -100, -100],
[-76, -90, -88, -82, -69, -84, -81, -81, -100, -100],
[-74, -90, -93, -85, -70, -84, -81, -82, -100, -100],
[-75, -86, -91, -87, -69, -85, -81, -83, -100, -100],
[-73, -88, -93, -90, -69, -85, -81, -84, -100, -100],
[-72, -92, -90, -85, -69, -83, -79, -82, -100, -100],
[-75, -90, -89, -84, -70, -86, -81, -78, -100, -100],
[-75, -89, -93, -83, -69, -85, -80, -83, -100, -100],
[-78, -87, -90, -84, -69, -86, -82, -83, -100, -100],
[-74, -87, -89, -82, -69, -84, -81, -84, -100, -100],
[-81, -89, -90, -84, -69, -85, -81, -82, -100, -100],
[-74, -91, -91, -83, -72, -84, -82, -81, -100, -100],
[-73, -90, -91, -83, -70, -88, -82, -84, -100, -100],
[-72, -92, -89, -83, -69, -87, -87, -83, -100, -100],
[-83, -91, -90, -87, -69, -84, -79, -82, -100, -100],
[-76, -93, -88, -84, -69, -87, -84, -82, -100, -100],
[-82, -91, -87, -85, -70, -84, -84, -84, -100, -100],
[-76, -91, -87, -85, -71, -84, -80, -76, -100, -100],
[-79, -91, -90, -88, -71, -85, -84, -82, -100, -100],
[-75, -90, -87, -86, -69, -87, -83, -88, -100, -100],
[-79, -89, -92, -85, -70, -87, -83, -80, -100, -100],
[-76, -100, -95, -86, -70, -85, -81, -81, -100, -100],
[-73, -100, -93, -87, -69, -86, -82, -82, -100, -100],
[-77, -100, -93, -85, -70, -86, -81, -85, -100, -100],
[-76, -100, -90, -86, -70, -86, -81, -82, -100, -100],
[-74, -100, -90, -83, -69, -87, -81, -83, -100, -100],
[-78, -100, -90, -86, -70, -85, -81, -90, -100, -100],
[-76, -100, -100, -87, -69, -86, -81, -87, -100, -100],
[-78, -100, -100, -86, -69, -86, -82, -84, -100, -100],
[-75, -100, -100, -85, -69, -87, -83, -83, -100, -100],
[-82, -100, -100, -84, -70, -86, -82, -82, -100, -100],
[-75, -100, -100, -87, -69, -88, -83, -84, -100, -100],
[-75, -100, -100, -86, -69, -85, -84, -87, -100, -100],
[-74, -100, -100, -83, -74, -87, -79, -83, -100, -100],
[-76, -100, -100, -86, -70, -87, -83, -88, -100, -100],
[-78, -100, -100, -83, -70, -88, -86, -84, -100, -100],
[-75, -100, -100, -85, -70, -86, -86, -79, -100, -100],
[-76, -100, -100, -84, -70, -84, -85, -77, -100, -100],
[-78, -100, -100, -84, -70, -84, -82, -79, -100, -100],
[-75, -100, -100, -84, -70, -87, -81, -81, -100, -100],
[-80, -100, -100, -82, -70, -86, -82, -80, -100, -100],
[-78, -100, -100, -85, -70, -85, -82, -79, -100, -100],
[-78, -100, -100, -85, -69, -85, -80, -80, -100, -100],
[-77, -100, -100, -83, -69, -86, -82, -79, -100, -100],
[-77, -100, -100, -83, -69, -85, -82, -81, -100, -100],
[-74, -100, -100, -81, -72, -84, -80, -82, -100, -100],
[-78, -100, -100, -83, -69, -85, -81, -81, -100, -100],
[-74, -100, -100, -84, -70, -85, -80, -81, -100, -100],
[-78, -100, -100, -83, -72, -83, -82, -81, -100, -100],
[-80, -100, -100, -84, -70, -84, -83, -78, -100, -100],
[-76, -100, -100, -85, -71, -83, -78, -79, -100, -100],
[-76, -100, -100, -84, -69, -86, -81, -79, -100, -100],
[-75, -100, -100, -84, -70, -85, -84, -82, -100, -100],
[-74, -100, -100, -85, -69, -85, -82, -79, -100, -100],
[-76, -100, -100, -84, -70, -85, -81, -100, -100, -100],
[-75, -100, -100, -85, -69, -85, -81, -100, -100, -100],
[-78, -100, -100, -84, -70, -84, -76, -100, -100, -100],
[-75, -100, -100, -83, -71, -86, -80, -100, -100, -100],
[-74, -100, -100, -84, -71, -85, -82, -100, -100, -100],
[-78, -100, -100, -100, -73, -85, -82, -100, -100, -100],
[-100, -100, -100, -100, -72, -85, -79, -100, -100, -100],
[-100, -100, -100, -100, -72, -87, -83, -100, -100, -100],
[-100, -100, -100, -100, -72, -100, -100, -100, -100, -100],
[-100, -100, -100, -100, -72, -100, -100, -100, -100, -100]];

function concatenateVertically(...arrays) {
    return arrays.reduce((acc, array) => acc.concat(array), []);
}

let trainingData = concatenateVertically(
    trainingData1_1,
    trainingData1_2,
    trainingData2_1,
    trainingData2_2,
    trainingData3_1,
    trainingData3_2
);

let predictionData = [];

predictionData.push(...Array(48).fill('1.1')); // 47 times 1.1
predictionData.push(...Array(17).fill('1.2')); // 16 times 1.2
predictionData.push(...Array(39).fill('2.1')); // 38 times 2.1
predictionData.push(...Array(50).fill('2.2')); // 49 times 2.2
predictionData.push(...Array(49).fill('3.1')); // 49 times 3.1
predictionData.push(...Array(68).fill('3.2')); // 68 times 3.2


module.exports = {
    trainingSet,
    predictions,
    trainingData,
    predictionData
};
